"SkillId","SkillName","TechnologyId","SkillDescription"
1,Создать Класс,1,
2,Создать Класс-наследник,1,
3,Импортировать Класс из библиотеки/модуля,1,
4,Создать функцию-декоратор,1,
5,Декарировать функцию,1,
6,Создать callback-функцию,1,
7,"Создать фунцию, принимающую аргументом callback",1,
8,Передать в функцию callback,1,
9,Получать сообщения от клиента в реальном времени,2,
10,Отправлять сообщения клиенту в реальном времени !!!,6,
11,Создать WebSocket соединение,2,
12,Разорвать WebSocket соединение,2,
13,Асинхронно обрабатывать WebSocket сообщения от клиента,6,
14,Отправить HTTP-запрос к серверу с авторизацией,3,
15,Отправить HTTP-запрос к серверу с таймаутом,3,
16,Вызвать исключение при проблемах с HTTP подключением,3,
17,Вызвать исключение при проблемах с HTTP ответом сервера,3,
18,Принять JSON в HTTP ответе сервера,3,
19,Принять потоковый HTTP ответ сервера,3,
20,Отправить LongPooling запрос к серверу,3,
21,Асинхронно обрабатывать HTTP-ответы сервера,6,
22,"Проверить, что содержимое HTTP-ответа сервера соответствует ожидаемому",4,
23,Просмотреть документацию к API (Swagger),4,
24,"Проверить, что данные пользователя соответствуют ожидаемым",4,
25,Проверить данные перед сохранением в БД,4,
26,Преобразовать данные из БД в Модель данных,4,
27,Отправить HTTP-запрос к серверу без параметров,3,
28,Создать экземпляр класса / объект,1,
29,Создать функцию,1,
30,Создать эндпоинт,8,
31,Обработать GET-запрос к эндпоинту,8,
32,Вернуть данные по GET-запросу,8,
33,Принять нагрузку POST-запроса,8,
34,Вернуть данные по POST-запросу,8,
35,Сгенерировать документацию JSON Schema,4,
36,авыавыаываыв,2,
