"ConceptId","ConceptName","ConceptDescription"
1,Класс,"Тип данных, основа Объектно-ориентированной модели Python"
2,Объект / Экземпляр класса,
3,Метод / Функция,"Вызываемый тип данных в Python, реализует приватный метод __call__()"
4,Наследование,
5,Функция-декоратор,"Функция-оболочка, которая выполняется ""вокруг"" функции, перед которой указан декоратор (синтаксический сахар)."
6,Декорируемая функция,"Функция, перед которой указан ""декоратор"" вида `@decorator_name`"
7,Callback,"Функция, которая передаётся в качестве аргумента другой функции. Вызывается внутри функции верхнего уровня."
8,WebSocket-соединение,
9,Сообщение,
10,Клиент WebSocket соединения,
11,HTTP-клиент,
12,HTTP-запрос,
13,HTTP-ответ,
14,Таймаут запроса,
15,Лимиты запроса,
16,Proxy,
17,Заголовки запроса / ответа,
18,Параметры запроса,
19,Тело запроса / ответа,
20,Модель данных,
21,Валидация данных,
22,HTTP-сервер,
23,Асинхронная функция,
24,Асинхронный цикл,
25,Асинхронная задача,
26,Корутина / сопрограмма,
27,Веб-приложение / web-app,
28,Эндпоинт,
29,Авторизация,
30,Клиент веб-приложения,
31,Нагрузка / Payload HTTP-запроса,
32,GET-запрос,
33,POST-запрос,
34,Статус HTTP-запроса,
